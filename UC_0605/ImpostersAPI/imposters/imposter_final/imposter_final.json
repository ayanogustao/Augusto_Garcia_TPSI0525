{
  "port": 3000,
  "protocol": "http",
  "stubs": [
    {
      "predicates": [
        { "equals": { "method": "GET", "path": "/" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "body": { "message": "Servidor Mountebank ativo - API simulada pronta." }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "GET", "path": "/api/marcas" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": { "marcas": ["Toyota", "Audi", "Ford", "Volvo", "Honda"] }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "GET", "path": "/api/cars" } },
            { "contains": { "query": { "brand": "Toyota" } } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": { "cars": ["Corolla", "Yaris", "RAV4"] }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "GET", "path": "/api/cars" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "message": "Nenhuma marca especificada. Utilize ?brand=Toyota, por exemplo.",
              "cars": []
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/login" } },
            {
              "deepEquals": {
                "body": { "username": "admin", "password": "secret" }
              }
            }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": { "status": "ok", "token": "validtoken" }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "POST", "path": "/api/login" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 401,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "invalid_credentials",
              "message": "Credenciais incorretas."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/users" } },
            { "contains": { "body": "exists@example.com" } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 409,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "email_exists",
              "message": "Já existe um utilizador com este email."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/users" } },
            { "not": { "contains": { "body": "exists@example.com" } } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 201,
            "headers": {
              "Content-Type": "application/json",
              "Location": "/api/users/1"
            },
            "body": {
              "id": 1,
              "status": "created",
              "message": "Utilizador criado com sucesso."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/temperature" } },
            { "not": { "contains": { "body": "value" } } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 400,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "missing_field",
              "message": "O campo 'value' é obrigatório."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/temperature" } },
            { "contains": { "body": "value" } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 201,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "status": "created",
              "message": "Temperatura registada com sucesso."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/tasks" } },
            { "contains": { "body": "\"title\":\"duplicate\"" } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 409,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "duplicate_task",
              "message": "Já existe uma tarefa com este título."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/tasks" } },
            { "not": { "contains": { "body": "\"title\":\"duplicate\"" } } }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 201,
            "headers": {
              "Content-Type": "application/json",
              "Location": "/api/tasks/101"
            },
            "body": {
              "id": 101,
              "status": "created",
              "message": "Tarefa criada com sucesso."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST", "path": "/api/auth" } },
            {
              "deepEquals": {
                "body": { "username": "user1", "password": "pass1" }
              }
            }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": { "token": "validtoken", "expires_in": 3600 }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "POST", "path": "/api/auth" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 401,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "invalid_credentials",
              "message": "Credenciais inválidas. Tente novamente."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "equals": {
            "method": "GET",
            "path": "/api/profile",
            "headers": { "Authorization": "Bearer validtoken" }
          }
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 200,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "username": "user1",
              "email": "user1@example.com",
              "role": "standard"
            }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "GET", "path": "/api/profile" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 403,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "forbidden",
              "message": "Acesso negado. Token inválido ou ausente."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        {
          "and": [
            { "equals": { "method": "POST" } },
            {
              "not": {
                "equals": {
                  "headers": { "Content-Type": "application/json" }
                }
              }
            }
          ]
        }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 415,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "unsupported_media_type",
              "message": "O header 'Content-Type: application/json' é obrigatório."
            }
          }
        }
      ]
    },
    {
      "predicates": [
        { "equals": { "method": "GET" } }
      ],
      "responses": [
        {
          "is": {
            "statusCode": 404,
            "headers": { "Content-Type": "application/json" },
            "body": {
              "error": "not_found",
              "message": "O recurso solicitado não existe."
            }
          }
        }
      ]
    }
  ]
}
